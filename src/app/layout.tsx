import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ReduxProvider from "@/redux/ReduxProvider";
import TanstackProviders from "@/query/TanstackProvider";
import { cookies } from "next/headers";
import ThemeToggler from "@/components/ThemeToggler/DarkModeToggler";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

//todo: 프로젝트 개요 잡히면 수정
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // 다크모드 -> 서버사이드에서 쿠키 읽어오기
  const colorTheme = (await cookies()).get("mode");
  // 디폴트 : 라이트모드
  const isDarkMode: boolean = colorTheme?.value === "dark";

  return (
    //html태그에 붙이는게 좀더 컨벤션 이라고 합니다.
    <html lang="en" className={`${isDarkMode ? "dark" : ""}`}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased dark:bg-[#2e2e2e]`}
      >
        <ReduxProvider>
          <TanstackProviders>
            <div
              className={`mx-auto max-w-7xl bg-orange-500 dark:bg-orange-900`}
            >
              <ThemeToggler />
              {children}
            </div>
          </TanstackProviders>
        </ReduxProvider>
      </body>
    </html>
  );
}
